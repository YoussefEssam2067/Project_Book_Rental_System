<%- include('../partials/headerProfile') %>

<div class="container mt-5">
  <h1 class="text-center">Rate & Review: <%= book.title %></h1>

  <!-- Display error or success messages -->
  <% if (error) { %>
  <div class="alert alert-danger"><%= error %></div>
  <% } %> <% if (success) { %>
  <div class="alert alert-success"><%= success %></div>
  <% } %>

  <form action="/books/<%= book.id %>/reviews" method="POST" class="mt-4">
    <div class="mb-3">
      <label for="rating" class="form-label">Rating (0-5)</label>
      <div id="star-rating" class="star-rating">
        <% for (let i = 1; i <= 5; i++) { %>
        <span class="star" data-value="<%= i %>" title="<%= i %> Stars">
          &#9733;
          <!-- Unicode for star -->
        </span>
        <% } %>
      </div>
      <input type="hidden" id="rating" name="rating" value="0" />
    </div>

    <div class="mb-3">
      <label for="review" class="form-label">Your Review</label>
      <textarea
        class="form-control"
        id="review"
        name="review"
        rows="4"
        placeholder="Write your thoughts about this book..."
        required
      ></textarea>
    </div>

    <button type="submit" class="btn btn-primary">Submit Review</button>
  </form>

  <a href="/books/<%= book.id %>" class="btn btn-secondary mt-3"
    >Back to Book</a
  >
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const stars = document.querySelectorAll("#star-rating .star");
    const ratingInput = document.querySelector("#rating");

    stars.forEach((star) => {
      // Handle mouse over
      star.addEventListener("mouseover", () => {
        const value = parseInt(star.dataset.value, 10);
        fillStars(value);
      });

      // Handle mouse out
      star.addEventListener("mouseout", () => {
        const currentRating = parseInt(ratingInput.value, 10) || 0;
        fillStars(currentRating);
      });

      // Handle click
      star.addEventListener("click", () => {
        const value = parseInt(star.dataset.value, 10);
        ratingInput.value = value; // Set the hidden input value
      });
    });

    // Fill stars up to a given value
    function fillStars(value) {
      stars.forEach((star) => {
        star.classList.toggle(
          "filled",
          parseInt(star.dataset.value, 10) <= value
        );
      });
    }
  });
</script>

<%- include('../partials/footer') %>
